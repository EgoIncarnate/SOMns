(* Copyright (c) 2001-2015 see AUTHORS file

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the 'Software'), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*)
class Actors usingVmMirror: vmMirror usingKernel: kernel = (
| private vmMirror  = vmMirror. 
  private Exception = kernel Exception.
|
  (* the easiest way to get to this reference in the VM.
     And, yes, looks dirty, but is rather ok. It's a Value after all. *)
  vmMirror farReferenceClass: FarReference.
  vmMirror promiseClass: Promise.
)(
  public class FarReference = Value (
    (* This class cannot be instantiated directly *)
    Exception signal.
  ) (
    protected doesNotUnderstand: selector arguments: arguments = (
      error: 'Cannot immediate-send ' + selector + ' to a far reference, they only accept eventual-sends.'.
    )
    public isNil = (
      (*far reference can never have a nil target. nil is a value object.*)
      ^ false.
    )
    public notNil = ( ^ true )
  )
  
  public class Promise = Object ()()
  
  public createActorFromValue: aValue = (
    ^ vmMirror actorsCreateFromValue: aValue
  )
)

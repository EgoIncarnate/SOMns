class DoesNotUnderstandTests usingPlatform: platform testFramework: minitest = (
| private TestContext = minitest TestContext.
  private Array       = platform kernel Array. |
)(
  class DoesNotUnderstandMessage to: target selector: selector arguments: args = (
    | public target   = target.
      public selector = selector.
      public arguments = args.
    |
  )()

  public class DoesNotUnderstandTest = TestContext ()(

    public testSimpleUnknownFoo = (
      | result |
      result := self foo.
      self assert: self is: result target.
      self assert: #foo equals: result selector.
    )
  
    public testArguments = (
      | result |
      result := self foo.
      self assert: 0 equals: result arguments size.

      result := self foo: 1.
      self assert: 1 equals: result arguments size.
      self assert: 1 equals: (result arguments at: 1).
    
      result := self foo: 1 bar: 2 baz: 3.
      self assert: 3 equals: result arguments size.
      self assert: 1 equals: (result arguments at: 1).
      self assert: 2 equals: (result arguments at: 2).
      self assert: 3 equals: (result arguments at: 3).
    )
  
    public testRepeat = (
      | result |
      result := Array new: 5.
      1 to: result size do: [:i |
        result at: i put: self foo.
      
        i > 1 ifTrue: [
          self assert: (result at: i - 1) ~= (result at: i).
        ]
      ].
    )
  
    doesNotUnderstand: selector arguments: arguments = (
      ^ DoesNotUnderstandMessage to: self selector: selector arguments: arguments.
    )
  ) : ( TEST_CONTEXT = () )
)
